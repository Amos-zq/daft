#! /usr/bin/env python
# Forearm camera configuration

PACKAGE='rgbd_evaluator'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()


gen.add("num_threads", int_t, 1, "Number of threads to use", 1, 1, 8)

gen.add("base_scale", double_t, 1, "Smallest feature scale (in meters)", 0.01, 0.001, 0.5)
gen.add("scale_step", double_t, 1, "Step size between consecutive scales", 1.4, 1, 2)
gen.add("scale_levels", int_t, 1, "Number of scales to search", 1, 1, 5)

gen.add("input", int_t, 1, "On which input channel should we detect keypoints?",0, 0, 2, edit_method = gen.enum([ 
gen.const("channel_intensity", int_t, 0, ""),
gen.const("channel_chroma", int_t, 1, ""),
gen.const("channel_depth", int_t, 2, "")
], "") )

gen.add("detector_type", int_t, 1, "Which detector function should be used?",1, 0, 5, edit_method = gen.enum([ 
gen.const("det_determinant_of_hessian", int_t, 0, ""),
gen.const("det_difference_of_boxes_small", int_t, 1, ""),
gen.const("det_difference_of_boxes_large", int_t, 2, ""),
gen.const("det_harris_corners_3x3", int_t, 3, ""),
gen.const("det_harris_corners_4x4", int_t, 4, ""),
gen.const("det_good_features_to_track_3x3", int_t, 5, "")
], "") )

gen.add("det_threshold", double_t, 1, "Threshold for feature detection (higher=less features)", 0.01, 0, 20)

gen.add("postfilter_type", int_t, 1, "Which detector function should be used to filter the output of the first one?", 1, 0, 3, edit_method = gen.enum([ 
gen.const("pf_none", int_t, 0, ""),
gen.const("pf_harris_corners_3x3", int_t, 1, ""),
gen.const("pf_harris_corners_4x4", int_t, 2, ""),
gen.const("pf_good_features_to_track_3x3", int_t, 3, "")
], "") )
0
gen.add("pf_threshold", double_t, 1, "Threshold for feature post-filtering (higher=less features)", 0.1, 0, 20)

gen.add("image_display", int_t, 1, "Which image should be shown?", 2, 0, 3, edit_method = gen.enum([ 
gen.const("detector_response", int_t, 0, ""),
gen.const("input", int_t, 1, ""),
gen.const("input_and_detector_response", int_t, 2, ""),
], "") )

gen.add("paint_keypoints", bool_t, 1, "Paint keypoints", True )

gen.add("thick_lines", bool_t, 1, "Thick lines", False )

exit(gen.generate(PACKAGE, "rgbd_evaluator_node", "RgbdFeatures"))
